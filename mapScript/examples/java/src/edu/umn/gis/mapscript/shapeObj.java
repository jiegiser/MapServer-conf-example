/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.umn.gis.mapscript;

public class shapeObj {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected shapeObj(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(shapeObj obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mapscriptJNI.delete_shapeObj(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int getNumlines() {
    return mapscriptJNI.shapeObj_numlines_get(swigCPtr, this);
  }

  public int getNumvalues() {
    return mapscriptJNI.shapeObj_numvalues_get(swigCPtr, this);
  }

  public void setBounds(rectObj value) {
    mapscriptJNI.shapeObj_bounds_set(swigCPtr, this, rectObj.getCPtr(value), value);
  }

  public rectObj getBounds() {
    long cPtr = mapscriptJNI.shapeObj_bounds_get(swigCPtr, this);
    return (cPtr == 0) ? null : new rectObj(cPtr, false);
  }

  public void setType(int value) {
    mapscriptJNI.shapeObj_type_set(swigCPtr, this, value);
  }

  public int getType() {
    return mapscriptJNI.shapeObj_type_get(swigCPtr, this);
  }

  public void setIndex(int value) {
    mapscriptJNI.shapeObj_index_set(swigCPtr, this, value);
  }

  public int getIndex() {
    return mapscriptJNI.shapeObj_index_get(swigCPtr, this);
  }

  public void setTileindex(int value) {
    mapscriptJNI.shapeObj_tileindex_set(swigCPtr, this, value);
  }

  public int getTileindex() {
    return mapscriptJNI.shapeObj_tileindex_get(swigCPtr, this);
  }

  public void setClassindex(int value) {
    mapscriptJNI.shapeObj_classindex_set(swigCPtr, this, value);
  }

  public int getClassindex() {
    return mapscriptJNI.shapeObj_classindex_get(swigCPtr, this);
  }

  public void setText(String value) {
    mapscriptJNI.shapeObj_text_set(swigCPtr, this, value);
  }

  public String getText() {
    return mapscriptJNI.shapeObj_text_get(swigCPtr, this);
  }

  public void setScratch(int value) {
    mapscriptJNI.shapeObj_scratch_set(swigCPtr, this, value);
  }

  public int getScratch() {
    return mapscriptJNI.shapeObj_scratch_get(swigCPtr, this);
  }

  public void setResultindex(int value) {
    mapscriptJNI.shapeObj_resultindex_set(swigCPtr, this, value);
  }

  public int getResultindex() {
    return mapscriptJNI.shapeObj_resultindex_get(swigCPtr, this);
  }

  public shapeObj(int type) {
    this(mapscriptJNI.new_shapeObj(type), true);
  }

  public static shapeObj fromWKT(String wkt) {
    long cPtr = mapscriptJNI.shapeObj_fromWKT(wkt);
    return (cPtr == 0) ? null : new shapeObj(cPtr, true);
  }

  public int project(projectionObj projin, projectionObj projout) {
    return mapscriptJNI.shapeObj_project__SWIG_0(swigCPtr, this, projectionObj.getCPtr(projin), projin, projectionObj.getCPtr(projout), projout);
  }

  public int project(reprojectionObj reprojector) {
    return mapscriptJNI.shapeObj_project__SWIG_1(swigCPtr, this, reprojectionObj.getCPtr(reprojector), reprojector);
  }

  public lineObj get(int i) {
    long cPtr = mapscriptJNI.shapeObj_get(swigCPtr, this, i);
    return (cPtr == 0) ? null : new lineObj(cPtr, false);
  }

  public int add(lineObj line) {
    return mapscriptJNI.shapeObj_add(swigCPtr, this, lineObj.getCPtr(line), line);
  }

  public int draw(mapObj map, layerObj layer, imageObj image) {
    return mapscriptJNI.shapeObj_draw(swigCPtr, this, mapObj.getCPtr(map), map, layerObj.getCPtr(layer), layer, imageObj.getCPtr(image), image);
  }

  public void setBounds() {
    mapscriptJNI.shapeObj_setBounds(swigCPtr, this);
  }

  public shapeObj cloneShape() {
    long cPtr = mapscriptJNI.shapeObj_cloneShape(swigCPtr, this);
    return (cPtr == 0) ? null : new shapeObj(cPtr, true);
  }

  public int copy(shapeObj dest) {
    return mapscriptJNI.shapeObj_copy(swigCPtr, this, shapeObj.getCPtr(dest), dest);
  }

  public String toWKT() {
    return mapscriptJNI.shapeObj_toWKT(swigCPtr, this);
  }

  public shapeObj buffer(double width) {
    long cPtr = mapscriptJNI.shapeObj_buffer(swigCPtr, this, width);
    return (cPtr == 0) ? null : new shapeObj(cPtr, true);
  }

  public shapeObj simplify(double tolerance) {
    long cPtr = mapscriptJNI.shapeObj_simplify(swigCPtr, this, tolerance);
    return (cPtr == 0) ? null : new shapeObj(cPtr, true);
  }

  public shapeObj topologyPreservingSimplify(double tolerance) {
    long cPtr = mapscriptJNI.shapeObj_topologyPreservingSimplify(swigCPtr, this, tolerance);
    return (cPtr == 0) ? null : new shapeObj(cPtr, true);
  }

  public shapeObj convexHull() {
    long cPtr = mapscriptJNI.shapeObj_convexHull(swigCPtr, this);
    return (cPtr == 0) ? null : new shapeObj(cPtr, true);
  }

  public shapeObj boundary() {
    long cPtr = mapscriptJNI.shapeObj_boundary(swigCPtr, this);
    return (cPtr == 0) ? null : new shapeObj(cPtr, true);
  }

  public pointObj getCentroid() {
    long cPtr = mapscriptJNI.shapeObj_getCentroid(swigCPtr, this);
    return (cPtr == 0) ? null : new pointObj(cPtr, true);
  }

  public shapeObj Union(shapeObj shape) {
    long cPtr = mapscriptJNI.shapeObj_Union(swigCPtr, this, shapeObj.getCPtr(shape), shape);
    return (cPtr == 0) ? null : new shapeObj(cPtr, true);
  }

  public shapeObj intersection(shapeObj shape) {
    long cPtr = mapscriptJNI.shapeObj_intersection(swigCPtr, this, shapeObj.getCPtr(shape), shape);
    return (cPtr == 0) ? null : new shapeObj(cPtr, true);
  }

  public shapeObj difference(shapeObj shape) {
    long cPtr = mapscriptJNI.shapeObj_difference(swigCPtr, this, shapeObj.getCPtr(shape), shape);
    return (cPtr == 0) ? null : new shapeObj(cPtr, true);
  }

  public shapeObj symDifference(shapeObj shape) {
    long cPtr = mapscriptJNI.shapeObj_symDifference(swigCPtr, this, shapeObj.getCPtr(shape), shape);
    return (cPtr == 0) ? null : new shapeObj(cPtr, true);
  }

  public int contains(shapeObj shape) {
    return mapscriptJNI.shapeObj_contains__SWIG_0(swigCPtr, this, shapeObj.getCPtr(shape), shape);
  }

  public int overlaps(shapeObj shape) {
    return mapscriptJNI.shapeObj_overlaps(swigCPtr, this, shapeObj.getCPtr(shape), shape);
  }

  public int within(shapeObj shape) {
    return mapscriptJNI.shapeObj_within(swigCPtr, this, shapeObj.getCPtr(shape), shape);
  }

  public int crosses(shapeObj shape) {
    return mapscriptJNI.shapeObj_crosses(swigCPtr, this, shapeObj.getCPtr(shape), shape);
  }

  public int intersects(shapeObj shape) {
    return mapscriptJNI.shapeObj_intersects(swigCPtr, this, shapeObj.getCPtr(shape), shape);
  }

  public int touches(shapeObj shape) {
    return mapscriptJNI.shapeObj_touches(swigCPtr, this, shapeObj.getCPtr(shape), shape);
  }

  public int equals(shapeObj shape) {
    return mapscriptJNI.shapeObj_equals(swigCPtr, this, shapeObj.getCPtr(shape), shape);
  }

  public int disjoint(shapeObj shape) {
    return mapscriptJNI.shapeObj_disjoint(swigCPtr, this, shapeObj.getCPtr(shape), shape);
  }

  public double getArea() {
    return mapscriptJNI.shapeObj_getArea(swigCPtr, this);
  }

  public double getLength() {
    return mapscriptJNI.shapeObj_getLength(swigCPtr, this);
  }

  public String getValue(int i) {
    return mapscriptJNI.shapeObj_getValue(swigCPtr, this, i);
  }

  public int contains(pointObj point) {
    return mapscriptJNI.shapeObj_contains__SWIG_1(swigCPtr, this, pointObj.getCPtr(point), point);
  }

  public double distanceToPoint(pointObj point) {
    return mapscriptJNI.shapeObj_distanceToPoint(swigCPtr, this, pointObj.getCPtr(point), point);
  }

  public double distanceToShape(shapeObj shape) {
    return mapscriptJNI.shapeObj_distanceToShape(swigCPtr, this, shapeObj.getCPtr(shape), shape);
  }

  public pointObj getLabelPoint() {
    long cPtr = mapscriptJNI.shapeObj_getLabelPoint(swigCPtr, this);
    return (cPtr == 0) ? null : new pointObj(cPtr, true);
  }

  public int setValue(int i, String value) {
    return mapscriptJNI.shapeObj_setValue(swigCPtr, this, i, value);
  }

  public void initValues(int numvalues) {
    mapscriptJNI.shapeObj_initValues(swigCPtr, this, numvalues);
  }

}
