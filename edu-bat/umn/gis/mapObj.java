package edu.umn.gis;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

public class mapObj {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected mapObj(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(mapObj obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mapscriptJNI.delete_mapObj(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setName(String value) {
    mapscriptJNI.mapObj_name_set(swigCPtr, this, value);
  }

  public String getName() {
    return mapscriptJNI.mapObj_name_get(swigCPtr, this);
  }

  public void setStatus(int value) {
    mapscriptJNI.mapObj_status_set(swigCPtr, this, value);
  }

  public int getStatus() {
    return mapscriptJNI.mapObj_status_get(swigCPtr, this);
  }

  public void setHeight(int value) {
    mapscriptJNI.mapObj_height_set(swigCPtr, this, value);
  }

  public int getHeight() {
    return mapscriptJNI.mapObj_height_get(swigCPtr, this);
  }

  public void setWidth(int value) {
    mapscriptJNI.mapObj_width_set(swigCPtr, this, value);
  }

  public int getWidth() {
    return mapscriptJNI.mapObj_width_get(swigCPtr, this);
  }

  public void setMaxsize(int value) {
    mapscriptJNI.mapObj_maxsize_set(swigCPtr, this, value);
  }

  public int getMaxsize() {
    return mapscriptJNI.mapObj_maxsize_get(swigCPtr, this);
  }

  public int getRefcount() {
    return mapscriptJNI.mapObj_refcount_get(swigCPtr, this);
  }

  public int getNumlayers() {
    return mapscriptJNI.mapObj_numlayers_get(swigCPtr, this);
  }

  public int getMaxlayers() {
    return mapscriptJNI.mapObj_maxlayers_get(swigCPtr, this);
  }

  public symbolSetObj getSymbolset() {
    long cPtr = mapscriptJNI.mapObj_symbolset_get(swigCPtr, this);
    return (cPtr == 0) ? null : new symbolSetObj(cPtr, false);
  }

  public fontSetObj getFontset() {
    long cPtr = mapscriptJNI.mapObj_fontset_get(swigCPtr, this);
    return (cPtr == 0) ? null : new fontSetObj(cPtr, false);
  }

  public labelCacheObj getLabelcache() {
    long cPtr = mapscriptJNI.mapObj_labelcache_get(swigCPtr, this);
    return (cPtr == 0) ? null : new labelCacheObj(cPtr, false);
  }

  public void setTransparent(int value) {
    mapscriptJNI.mapObj_transparent_set(swigCPtr, this, value);
  }

  public int getTransparent() {
    return mapscriptJNI.mapObj_transparent_get(swigCPtr, this);
  }

  public void setInterlace(int value) {
    mapscriptJNI.mapObj_interlace_set(swigCPtr, this, value);
  }

  public int getInterlace() {
    return mapscriptJNI.mapObj_interlace_get(swigCPtr, this);
  }

  public void setImagequality(int value) {
    mapscriptJNI.mapObj_imagequality_set(swigCPtr, this, value);
  }

  public int getImagequality() {
    return mapscriptJNI.mapObj_imagequality_get(swigCPtr, this);
  }

  public void setExtent(rectObj value) {
    mapscriptJNI.mapObj_extent_set(swigCPtr, this, rectObj.getCPtr(value), value);
  }

  public rectObj getExtent() {
    long cPtr = mapscriptJNI.mapObj_extent_get(swigCPtr, this);
    return (cPtr == 0) ? null : new rectObj(cPtr, false);
  }

  public void setCellsize(double value) {
    mapscriptJNI.mapObj_cellsize_set(swigCPtr, this, value);
  }

  public double getCellsize() {
    return mapscriptJNI.mapObj_cellsize_get(swigCPtr, this);
  }

  public void setUnits(MS_UNITS value) {
    mapscriptJNI.mapObj_units_set(swigCPtr, this, value.swigValue());
  }

  public MS_UNITS getUnits() {
    return MS_UNITS.swigToEnum(mapscriptJNI.mapObj_units_get(swigCPtr, this));
  }

  public void setScaledenom(double value) {
    mapscriptJNI.mapObj_scaledenom_set(swigCPtr, this, value);
  }

  public double getScaledenom() {
    return mapscriptJNI.mapObj_scaledenom_get(swigCPtr, this);
  }

  public void setResolution(double value) {
    mapscriptJNI.mapObj_resolution_set(swigCPtr, this, value);
  }

  public double getResolution() {
    return mapscriptJNI.mapObj_resolution_get(swigCPtr, this);
  }

  public void setDefresolution(double value) {
    mapscriptJNI.mapObj_defresolution_set(swigCPtr, this, value);
  }

  public double getDefresolution() {
    return mapscriptJNI.mapObj_defresolution_get(swigCPtr, this);
  }

  public void setShapepath(String value) {
    mapscriptJNI.mapObj_shapepath_set(swigCPtr, this, value);
  }

  public String getShapepath() {
    return mapscriptJNI.mapObj_shapepath_get(swigCPtr, this);
  }

  public void setMappath(String value) {
    mapscriptJNI.mapObj_mappath_set(swigCPtr, this, value);
  }

  public String getMappath() {
    return mapscriptJNI.mapObj_mappath_get(swigCPtr, this);
  }

  public void setImagecolor(colorObj value) {
    mapscriptJNI.mapObj_imagecolor_set(swigCPtr, this, colorObj.getCPtr(value), value);
  }

  public colorObj getImagecolor() {
    long cPtr = mapscriptJNI.mapObj_imagecolor_get(swigCPtr, this);
    return (cPtr == 0) ? null : new colorObj(cPtr, false);
  }

  public int getNumoutputformats() {
    return mapscriptJNI.mapObj_numoutputformats_get(swigCPtr, this);
  }

  public SWIGTYPE_p_p_outputFormatObj getOutputformatlist() {
    long cPtr = mapscriptJNI.mapObj_outputformatlist_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_outputFormatObj(cPtr, false);
  }

  public outputFormatObj getOutputformat() {
    long cPtr = mapscriptJNI.mapObj_outputformat_get(swigCPtr, this);
    return (cPtr == 0) ? null : new outputFormatObj(cPtr, false);
  }

  public String getImagetype() {
    return mapscriptJNI.mapObj_imagetype_get(swigCPtr, this);
  }

  public referenceMapObj getReference() {
    long cPtr = mapscriptJNI.mapObj_reference_get(swigCPtr, this);
    return (cPtr == 0) ? null : new referenceMapObj(cPtr, false);
  }

  public scalebarObj getScalebar() {
    long cPtr = mapscriptJNI.mapObj_scalebar_get(swigCPtr, this);
    return (cPtr == 0) ? null : new scalebarObj(cPtr, false);
  }

  public legendObj getLegend() {
    long cPtr = mapscriptJNI.mapObj_legend_get(swigCPtr, this);
    return (cPtr == 0) ? null : new legendObj(cPtr, false);
  }

  public queryMapObj getQuerymap() {
    long cPtr = mapscriptJNI.mapObj_querymap_get(swigCPtr, this);
    return (cPtr == 0) ? null : new queryMapObj(cPtr, false);
  }

  public webObj getWeb() {
    long cPtr = mapscriptJNI.mapObj_web_get(swigCPtr, this);
    return (cPtr == 0) ? null : new webObj(cPtr, false);
  }

  public void setLayerorder(SWIGTYPE_p_int value) {
    mapscriptJNI.mapObj_layerorder_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
  }

  public SWIGTYPE_p_int getLayerorder() {
    long cPtr = mapscriptJNI.mapObj_layerorder_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public void setDebug(int value) {
    mapscriptJNI.mapObj_debug_set(swigCPtr, this, value);
  }

  public int getDebug() {
    return mapscriptJNI.mapObj_debug_get(swigCPtr, this);
  }

  public void setDatapattern(String value) {
    mapscriptJNI.mapObj_datapattern_set(swigCPtr, this, value);
  }

  public String getDatapattern() {
    return mapscriptJNI.mapObj_datapattern_get(swigCPtr, this);
  }

  public void setTemplatepattern(String value) {
    mapscriptJNI.mapObj_templatepattern_set(swigCPtr, this, value);
  }

  public String getTemplatepattern() {
    return mapscriptJNI.mapObj_templatepattern_get(swigCPtr, this);
  }

  public hashTableObj getConfigoptions() {
    long cPtr = mapscriptJNI.mapObj_configoptions_get(swigCPtr, this);
    return (cPtr == 0) ? null : new hashTableObj(cPtr, false);
  }

  public mapObj(String filename) {
    this(mapscriptJNI.new_mapObj(filename), true);
  }

  public mapObj cloneMap() {
    long cPtr = mapscriptJNI.mapObj_cloneMap(swigCPtr, this);
    return (cPtr == 0) ? null : new mapObj(cPtr, true);
  }

  public int insertLayer(layerObj layer, int index) {
    // call the C API
    int actualIndex = mapscriptJNI.mapObj_insertLayer(swigCPtr, this, layerObj.getCPtr(layer), layer, index);
    /* Store parent reference, item 3.2 */
    layer.map = this;
    return actualIndex;
  }

  public layerObj removeLayer(int index) {
    long cPtr = mapscriptJNI.mapObj_removeLayer(swigCPtr, this, index);
    return (cPtr == 0) ? null : new layerObj(cPtr, true);
  }

  public int setExtent(double minx, double miny, double maxx, double maxy) {
    return mapscriptJNI.mapObj_setExtent(swigCPtr, this, minx, miny, maxx, maxy);
  }

  public int offsetExtent(double x, double y) {
    return mapscriptJNI.mapObj_offsetExtent(swigCPtr, this, x, y);
  }

  public int scaleExtent(double zoomfactor, double minscaledenom, double maxscaledenom) {
    return mapscriptJNI.mapObj_scaleExtent(swigCPtr, this, zoomfactor, minscaledenom, maxscaledenom);
  }

  public int setCenter(pointObj center) {
    return mapscriptJNI.mapObj_setCenter(swigCPtr, this, pointObj.getCPtr(center), center);
  }

  public int setSize(int width, int height) {
    return mapscriptJNI.mapObj_setSize(swigCPtr, this, width, height);
  }

  public int setRotation(double rotation_angle) {
    return mapscriptJNI.mapObj_setRotation(swigCPtr, this, rotation_angle);
  }

  public layerObj getLayer(int i) {
    // call the C API
    long cPtr = mapscriptJNI.mapObj_getLayer(swigCPtr, this, i);
    layerObj layer = null;
    if (cPtr != 0) {
      layer = new layerObj(cPtr, true);
      /* Store parent reference, item 3.2 */
      layer.map = this;
    }
    return layer;
  }

  public layerObj getLayerByName(String name) {
    // call the C API
    long cPtr = mapscriptJNI.mapObj_getLayerByName(swigCPtr, this, name);
    layerObj layer = null;
    if (cPtr != 0) {
      layer = new layerObj(cPtr, true);
      /* Store parent reference, item 3.2 */
      layer.map = this;
    }
    return layer;
  }

  public int getSymbolByName(String name) {
    return mapscriptJNI.mapObj_getSymbolByName(swigCPtr, this, name);
  }

  public void prepareQuery() {
    mapscriptJNI.mapObj_prepareQuery(swigCPtr, this);
  }

  public imageObj prepareImage() {
    long cPtr = mapscriptJNI.mapObj_prepareImage(swigCPtr, this);
    return (cPtr == 0) ? null : new imageObj(cPtr, true);
  }

  public void setImageType(String imagetype) {
    mapscriptJNI.mapObj_setImageType(swigCPtr, this, imagetype);
  }

  public void selectOutputFormat(String imagetype) {
    mapscriptJNI.mapObj_selectOutputFormat(swigCPtr, this, imagetype);
  }

  public void setOutputFormat(outputFormatObj format) {
    mapscriptJNI.mapObj_setOutputFormat(swigCPtr, this, outputFormatObj.getCPtr(format), format);
  }

  public imageObj draw() {
    long cPtr = mapscriptJNI.mapObj_draw(swigCPtr, this);
    return (cPtr == 0) ? null : new imageObj(cPtr, true);
  }

  public imageObj drawQuery() {
    long cPtr = mapscriptJNI.mapObj_drawQuery(swigCPtr, this);
    return (cPtr == 0) ? null : new imageObj(cPtr, true);
  }

  public imageObj drawLegend() {
    long cPtr = mapscriptJNI.mapObj_drawLegend(swigCPtr, this);
    return (cPtr == 0) ? null : new imageObj(cPtr, true);
  }

  public imageObj drawScalebar() {
    long cPtr = mapscriptJNI.mapObj_drawScalebar(swigCPtr, this);
    return (cPtr == 0) ? null : new imageObj(cPtr, true);
  }

  public imageObj drawReferenceMap() {
    long cPtr = mapscriptJNI.mapObj_drawReferenceMap(swigCPtr, this);
    return (cPtr == 0) ? null : new imageObj(cPtr, true);
  }

  public int embedScalebar(imageObj image) {
    return mapscriptJNI.mapObj_embedScalebar(swigCPtr, this, imageObj.getCPtr(image), image);
  }

  public int embedLegend(imageObj image) {
    return mapscriptJNI.mapObj_embedLegend(swigCPtr, this, imageObj.getCPtr(image), image);
  }

  public int drawLabelCache(imageObj image) {
    return mapscriptJNI.mapObj_drawLabelCache(swigCPtr, this, imageObj.getCPtr(image), image);
  }

  public labelCacheMemberObj getLabel(int i) {
    long cPtr = mapscriptJNI.mapObj_getLabel(swigCPtr, this, i);
    return (cPtr == 0) ? null : new labelCacheMemberObj(cPtr, false);
  }

  public labelCacheMemberObj nextLabel() {
    long cPtr = mapscriptJNI.mapObj_nextLabel(swigCPtr, this);
    return (cPtr == 0) ? null : new labelCacheMemberObj(cPtr, false);
  }

  public int queryByFilter(String string) {
    return mapscriptJNI.mapObj_queryByFilter(swigCPtr, this, string);
  }

  public int queryByPoint(pointObj point, int mode, double buffer) {
    return mapscriptJNI.mapObj_queryByPoint(swigCPtr, this, pointObj.getCPtr(point), point, mode, buffer);
  }

  public int queryByRect(rectObj rect) {
    return mapscriptJNI.mapObj_queryByRect(swigCPtr, this, rectObj.getCPtr(rect), rect);
  }

  public int queryByFeatures(int slayer) {
    return mapscriptJNI.mapObj_queryByFeatures(swigCPtr, this, slayer);
  }

  public int queryByShape(shapeObj shape) {
    return mapscriptJNI.mapObj_queryByShape(swigCPtr, this, shapeObj.getCPtr(shape), shape);
  }

  public int setWKTProjection(String wkt) {
    return mapscriptJNI.mapObj_setWKTProjection(swigCPtr, this, wkt);
  }

  public String getProjection() {
    return mapscriptJNI.mapObj_getProjection(swigCPtr, this);
  }

  public int setProjection(String proj4) {
    return mapscriptJNI.mapObj_setProjection(swigCPtr, this, proj4);
  }

  public int save(String filename) {
    return mapscriptJNI.mapObj_save(swigCPtr, this, filename);
  }

  public int saveQuery(String filename, int results) {
    return mapscriptJNI.mapObj_saveQuery(swigCPtr, this, filename, results);
  }

  public int loadQuery(String filename) {
    return mapscriptJNI.mapObj_loadQuery(swigCPtr, this, filename);
  }

  public void freeQuery(int qlayer) {
    mapscriptJNI.mapObj_freeQuery(swigCPtr, this, qlayer);
  }

  public int saveQueryAsGML(String filename, String ns) {
    return mapscriptJNI.mapObj_saveQueryAsGML(swigCPtr, this, filename, ns);
  }

  public String getMetaData(String name) {
    return mapscriptJNI.mapObj_getMetaData(swigCPtr, this, name);
  }

  public int setMetaData(String name, String value) {
    return mapscriptJNI.mapObj_setMetaData(swigCPtr, this, name, value);
  }

  public int removeMetaData(String name) {
    return mapscriptJNI.mapObj_removeMetaData(swigCPtr, this, name);
  }

  public String getFirstMetaDataKey() {
    return mapscriptJNI.mapObj_getFirstMetaDataKey(swigCPtr, this);
  }

  public String getNextMetaDataKey(String lastkey) {
    return mapscriptJNI.mapObj_getNextMetaDataKey(swigCPtr, this, lastkey);
  }

  public int setSymbolSet(String szFileName) {
    return mapscriptJNI.mapObj_setSymbolSet(swigCPtr, this, szFileName);
  }

  public int getNumSymbols() {
    return mapscriptJNI.mapObj_getNumSymbols(swigCPtr, this);
  }

  public int setFontSet(String filename) {
    return mapscriptJNI.mapObj_setFontSet(swigCPtr, this, filename);
  }

  public int saveMapContext(String szFileName) {
    return mapscriptJNI.mapObj_saveMapContext(swigCPtr, this, szFileName);
  }

  public int loadMapContext(String szFileName, int useUniqueNames) {
    return mapscriptJNI.mapObj_loadMapContext(swigCPtr, this, szFileName, useUniqueNames);
  }

  public int moveLayerUp(int layerindex) {
    return mapscriptJNI.mapObj_moveLayerUp(swigCPtr, this, layerindex);
  }

  public int moveLayerDown(int layerindex) {
    return mapscriptJNI.mapObj_moveLayerDown(swigCPtr, this, layerindex);
  }

  public intarray getLayersDrawingOrder() {
    long cPtr = mapscriptJNI.mapObj_getLayersDrawingOrder(swigCPtr, this);
    return (cPtr == 0) ? null : new intarray(cPtr, true);
  }

  public int setLayersDrawingOrder(SWIGTYPE_p_int panIndexes) {
    return mapscriptJNI.mapObj_setLayersDrawingOrder(swigCPtr, this, SWIGTYPE_p_int.getCPtr(panIndexes));
  }

  public void setConfigOption(String key, String value) {
    mapscriptJNI.mapObj_setConfigOption(swigCPtr, this, key, value);
  }

  public String getConfigOption(String key) {
    return mapscriptJNI.mapObj_getConfigOption(swigCPtr, this, key);
  }

  public void applyConfigOptions() {
    mapscriptJNI.mapObj_applyConfigOptions(swigCPtr, this);
  }

  public int applySLD(String sld) {
    return mapscriptJNI.mapObj_applySLD(swigCPtr, this, sld);
  }

  public int applySLDURL(String sld) {
    return mapscriptJNI.mapObj_applySLDURL(swigCPtr, this, sld);
  }

  public String generateSLD() {
    return mapscriptJNI.mapObj_generateSLD(swigCPtr, this);
  }

  public String processTemplate(int bGenerateImages, SWIGTYPE_p_p_char names, SWIGTYPE_p_p_char values,
      int numentries) {
    return mapscriptJNI.mapObj_processTemplate(swigCPtr, this, bGenerateImages, SWIGTYPE_p_p_char.getCPtr(names),
        SWIGTYPE_p_p_char.getCPtr(values), numentries);
  }

  public String processLegendTemplate(SWIGTYPE_p_p_char names, SWIGTYPE_p_p_char values, int numentries) {
    return mapscriptJNI.mapObj_processLegendTemplate(swigCPtr, this, SWIGTYPE_p_p_char.getCPtr(names),
        SWIGTYPE_p_p_char.getCPtr(values), numentries);
  }

  public String processQueryTemplate(SWIGTYPE_p_p_char names, SWIGTYPE_p_p_char values, int numentries) {
    return mapscriptJNI.mapObj_processQueryTemplate(swigCPtr, this, SWIGTYPE_p_p_char.getCPtr(names),
        SWIGTYPE_p_p_char.getCPtr(values), numentries);
  }

  public outputFormatObj getOutputFormatByName(String name) {
    long cPtr = mapscriptJNI.mapObj_getOutputFormatByName(swigCPtr, this, name);
    return (cPtr == 0) ? null : new outputFormatObj(cPtr, false);
  }

  public int appendOutputFormat(outputFormatObj format) {
    return mapscriptJNI.mapObj_appendOutputFormat(swigCPtr, this, outputFormatObj.getCPtr(format), format);
  }

  public int removeOutputFormat(String name) {
    return mapscriptJNI.mapObj_removeOutputFormat(swigCPtr, this, name);
  }

  public int loadOWSParameters(OWSRequest request, String wmtver_string) {
    return mapscriptJNI.mapObj_loadOWSParameters(swigCPtr, this, OWSRequest.getCPtr(request), request, wmtver_string);
  }

  public int OWSDispatch(OWSRequest req) {
    return mapscriptJNI.mapObj_OWSDispatch(swigCPtr, this, OWSRequest.getCPtr(req), req);
  }

  public int zoomPoint(int zoomfactor, pointObj poPixPos, int width, int height, rectObj poGeorefExt,
      rectObj poMaxGeorefExt) {
    return mapscriptJNI.mapObj_zoomPoint(swigCPtr, this, zoomfactor, pointObj.getCPtr(poPixPos), poPixPos, width,
        height, rectObj.getCPtr(poGeorefExt), poGeorefExt, rectObj.getCPtr(poMaxGeorefExt), poMaxGeorefExt);
  }

  public int zoomRectangle(rectObj poPixRect, int width, int height, rectObj poGeorefExt, rectObj poMaxGeorefExt) {
    return mapscriptJNI.mapObj_zoomRectangle(swigCPtr, this, rectObj.getCPtr(poPixRect), poPixRect, width, height,
        rectObj.getCPtr(poGeorefExt), poGeorefExt, rectObj.getCPtr(poMaxGeorefExt), poMaxGeorefExt);
  }

  public int zoomScale(double scale, pointObj poPixPos, int width, int height, rectObj poGeorefExt,
      rectObj poMaxGeorefExt) {
    return mapscriptJNI.mapObj_zoomScale(swigCPtr, this, scale, pointObj.getCPtr(poPixPos), poPixPos, width, height,
        rectObj.getCPtr(poGeorefExt), poGeorefExt, rectObj.getCPtr(poMaxGeorefExt), poMaxGeorefExt);
  }

}
