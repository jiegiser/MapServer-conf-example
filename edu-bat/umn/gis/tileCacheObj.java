package edu.umn.gis;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

public class tileCacheObj {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected tileCacheObj(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(tileCacheObj obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mapscriptJNI.delete_tileCacheObj(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setSymbol(symbolObj value) {
    mapscriptJNI.tileCacheObj_symbol_set(swigCPtr, this, symbolObj.getCPtr(value), value);
  }

  public symbolObj getSymbol() {
    long cPtr = mapscriptJNI.tileCacheObj_symbol_get(swigCPtr, this);
    return (cPtr == 0) ? null : new symbolObj(cPtr, false);
  }

  public void setWidth(int value) {
    mapscriptJNI.tileCacheObj_width_set(swigCPtr, this, value);
  }

  public int getWidth() {
    return mapscriptJNI.tileCacheObj_width_get(swigCPtr, this);
  }

  public void setHeight(int value) {
    mapscriptJNI.tileCacheObj_height_set(swigCPtr, this, value);
  }

  public int getHeight() {
    return mapscriptJNI.tileCacheObj_height_get(swigCPtr, this);
  }

  public void setColor(colorObj value) {
    mapscriptJNI.tileCacheObj_color_set(swigCPtr, this, colorObj.getCPtr(value), value);
  }

  public colorObj getColor() {
    long cPtr = mapscriptJNI.tileCacheObj_color_get(swigCPtr, this);
    return (cPtr == 0) ? null : new colorObj(cPtr, false);
  }

  public void setOutlinecolor(colorObj value) {
    mapscriptJNI.tileCacheObj_outlinecolor_set(swigCPtr, this, colorObj.getCPtr(value), value);
  }

  public colorObj getOutlinecolor() {
    long cPtr = mapscriptJNI.tileCacheObj_outlinecolor_get(swigCPtr, this);
    return (cPtr == 0) ? null : new colorObj(cPtr, false);
  }

  public void setBackgroundcolor(colorObj value) {
    mapscriptJNI.tileCacheObj_backgroundcolor_set(swigCPtr, this, colorObj.getCPtr(value), value);
  }

  public colorObj getBackgroundcolor() {
    long cPtr = mapscriptJNI.tileCacheObj_backgroundcolor_get(swigCPtr, this);
    return (cPtr == 0) ? null : new colorObj(cPtr, false);
  }

  public void setOutlinewidth(double value) {
    mapscriptJNI.tileCacheObj_outlinewidth_set(swigCPtr, this, value);
  }

  public double getOutlinewidth() {
    return mapscriptJNI.tileCacheObj_outlinewidth_get(swigCPtr, this);
  }

  public void setRotation(double value) {
    mapscriptJNI.tileCacheObj_rotation_set(swigCPtr, this, value);
  }

  public double getRotation() {
    return mapscriptJNI.tileCacheObj_rotation_get(swigCPtr, this);
  }

  public void setScale(double value) {
    mapscriptJNI.tileCacheObj_scale_set(swigCPtr, this, value);
  }

  public double getScale() {
    return mapscriptJNI.tileCacheObj_scale_get(swigCPtr, this);
  }

  public void setImage(imageObj value) {
    mapscriptJNI.tileCacheObj_image_set(swigCPtr, this, imageObj.getCPtr(value), value);
  }

  public imageObj getImage() {
    long cPtr = mapscriptJNI.tileCacheObj_image_get(swigCPtr, this);
    return (cPtr == 0) ? null : new imageObj(cPtr, false);
  }

  public void setNext(tileCacheObj value) {
    mapscriptJNI.tileCacheObj_next_set(swigCPtr, this, tileCacheObj.getCPtr(value), value);
  }

  public tileCacheObj getNext() {
    long cPtr = mapscriptJNI.tileCacheObj_next_get(swigCPtr, this);
    return (cPtr == 0) ? null : new tileCacheObj(cPtr, false);
  }

  public tileCacheObj() {
    this(mapscriptJNI.new_tileCacheObj(), true);
  }

}
