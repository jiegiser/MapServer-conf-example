package edu.umn.gis;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

public class referenceMapObj {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected referenceMapObj(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(referenceMapObj obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mapscriptJNI.delete_referenceMapObj(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setExtent(rectObj value) {
    mapscriptJNI.referenceMapObj_extent_set(swigCPtr, this, rectObj.getCPtr(value), value);
  }

  public rectObj getExtent() {
    long cPtr = mapscriptJNI.referenceMapObj_extent_get(swigCPtr, this);
    return (cPtr == 0) ? null : new rectObj(cPtr, false);
  }

  public void setHeight(int value) {
    mapscriptJNI.referenceMapObj_height_set(swigCPtr, this, value);
  }

  public int getHeight() {
    return mapscriptJNI.referenceMapObj_height_get(swigCPtr, this);
  }

  public void setWidth(int value) {
    mapscriptJNI.referenceMapObj_width_set(swigCPtr, this, value);
  }

  public int getWidth() {
    return mapscriptJNI.referenceMapObj_width_get(swigCPtr, this);
  }

  public void setColor(colorObj value) {
    mapscriptJNI.referenceMapObj_color_set(swigCPtr, this, colorObj.getCPtr(value), value);
  }

  public colorObj getColor() {
    long cPtr = mapscriptJNI.referenceMapObj_color_get(swigCPtr, this);
    return (cPtr == 0) ? null : new colorObj(cPtr, false);
  }

  public void setOutlinecolor(colorObj value) {
    mapscriptJNI.referenceMapObj_outlinecolor_set(swigCPtr, this, colorObj.getCPtr(value), value);
  }

  public colorObj getOutlinecolor() {
    long cPtr = mapscriptJNI.referenceMapObj_outlinecolor_get(swigCPtr, this);
    return (cPtr == 0) ? null : new colorObj(cPtr, false);
  }

  public void setImage(String value) {
    mapscriptJNI.referenceMapObj_image_set(swigCPtr, this, value);
  }

  public String getImage() {
    return mapscriptJNI.referenceMapObj_image_get(swigCPtr, this);
  }

  public void setStatus(int value) {
    mapscriptJNI.referenceMapObj_status_set(swigCPtr, this, value);
  }

  public int getStatus() {
    return mapscriptJNI.referenceMapObj_status_get(swigCPtr, this);
  }

  public void setMarker(int value) {
    mapscriptJNI.referenceMapObj_marker_set(swigCPtr, this, value);
  }

  public int getMarker() {
    return mapscriptJNI.referenceMapObj_marker_get(swigCPtr, this);
  }

  public void setMarkername(String value) {
    mapscriptJNI.referenceMapObj_markername_set(swigCPtr, this, value);
  }

  public String getMarkername() {
    return mapscriptJNI.referenceMapObj_markername_get(swigCPtr, this);
  }

  public void setMarkersize(int value) {
    mapscriptJNI.referenceMapObj_markersize_set(swigCPtr, this, value);
  }

  public int getMarkersize() {
    return mapscriptJNI.referenceMapObj_markersize_get(swigCPtr, this);
  }

  public void setMinboxsize(int value) {
    mapscriptJNI.referenceMapObj_minboxsize_set(swigCPtr, this, value);
  }

  public int getMinboxsize() {
    return mapscriptJNI.referenceMapObj_minboxsize_get(swigCPtr, this);
  }

  public void setMaxboxsize(int value) {
    mapscriptJNI.referenceMapObj_maxboxsize_set(swigCPtr, this, value);
  }

  public int getMaxboxsize() {
    return mapscriptJNI.referenceMapObj_maxboxsize_get(swigCPtr, this);
  }

  public mapObj getMap() {
    long cPtr = mapscriptJNI.referenceMapObj_map_get(swigCPtr, this);
    return (cPtr == 0) ? null : new mapObj(cPtr, false);
  }

  public int updateFromString(String snippet) {
    return mapscriptJNI.referenceMapObj_updateFromString(swigCPtr, this, snippet);
  }

  public referenceMapObj() {
    this(mapscriptJNI.new_referenceMapObj(), true);
  }

}
