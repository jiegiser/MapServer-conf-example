package edu.umn.gis;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

public class DBFInfo {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected DBFInfo(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DBFInfo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mapscriptJNI.delete_DBFInfo(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SWIGTYPE_p_FILE getFp() {
    long cPtr = mapscriptJNI.DBFInfo_fp_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_FILE(cPtr, false);
  }

  public int getNRecords() {
    return mapscriptJNI.DBFInfo_nRecords_get(swigCPtr, this);
  }

  public long getNRecordLength() {
    return mapscriptJNI.DBFInfo_nRecordLength_get(swigCPtr, this);
  }

  public int getNHeaderLength() {
    return mapscriptJNI.DBFInfo_nHeaderLength_get(swigCPtr, this);
  }

  public int getNFields() {
    return mapscriptJNI.DBFInfo_nFields_get(swigCPtr, this);
  }

  public SWIGTYPE_p_int getPanFieldOffset() {
    long cPtr = mapscriptJNI.DBFInfo_panFieldOffset_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public SWIGTYPE_p_int getPanFieldSize() {
    long cPtr = mapscriptJNI.DBFInfo_panFieldSize_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public SWIGTYPE_p_int getPanFieldDecimals() {
    long cPtr = mapscriptJNI.DBFInfo_panFieldDecimals_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public String getPachFieldType() {
    return mapscriptJNI.DBFInfo_pachFieldType_get(swigCPtr, this);
  }

  public String getPszHeader() {
    return mapscriptJNI.DBFInfo_pszHeader_get(swigCPtr, this);
  }

  public int getNCurrentRecord() {
    return mapscriptJNI.DBFInfo_nCurrentRecord_get(swigCPtr, this);
  }

  public int getBCurrentRecordModified() {
    return mapscriptJNI.DBFInfo_bCurrentRecordModified_get(swigCPtr, this);
  }

  public String getPszCurrentRecord() {
    return mapscriptJNI.DBFInfo_pszCurrentRecord_get(swigCPtr, this);
  }

  public int getBNoHeader() {
    return mapscriptJNI.DBFInfo_bNoHeader_get(swigCPtr, this);
  }

  public int getBUpdated() {
    return mapscriptJNI.DBFInfo_bUpdated_get(swigCPtr, this);
  }

  public String getPszStringField() {
    return mapscriptJNI.DBFInfo_pszStringField_get(swigCPtr, this);
  }

  public int getNStringFieldLen() {
    return mapscriptJNI.DBFInfo_nStringFieldLen_get(swigCPtr, this);
  }

  public String getFieldName(int iField) {
    return mapscriptJNI.DBFInfo_getFieldName(swigCPtr, this, iField);
  }

  public int getFieldWidth(int iField) {
    return mapscriptJNI.DBFInfo_getFieldWidth(swigCPtr, this, iField);
  }

  public int getFieldDecimals(int iField) {
    return mapscriptJNI.DBFInfo_getFieldDecimals(swigCPtr, this, iField);
  }

  public int getFieldType(int iField) {
    return mapscriptJNI.DBFInfo_getFieldType(swigCPtr, this, iField);
  }

  public DBFInfo() {
    this(mapscriptJNI.new_DBFInfo(), true);
  }

}
